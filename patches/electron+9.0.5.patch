diff --git a/node_modules/electron/electron.d.ts b/node_modules/electron/electron.d.ts
index de7a17f..3df4791 100644
--- a/node_modules/electron/electron.d.ts
+++ b/node_modules/electron/electron.d.ts
@@ -107,6 +107,7 @@ declare namespace Electron {
   const webFrame: WebFrame;
   const webviewTag: WebviewTag;
 
+  // @ts-ignore
   interface App extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/app
@@ -1498,6 +1499,7 @@ Here's a very simple example of creating a custom Jump List:
     userAgentFallback: string;
   }
 
+  // @ts-ignore
   interface AutoUpdater extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/auto-updater
@@ -1656,6 +1658,7 @@ Here's a very simple example of creating a custom Jump List:
     webContents: WebContents;
   }
 
+  // @ts-ignore
   class BrowserWindow extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/browser-window
@@ -3061,6 +3064,7 @@ This cannot be called when `titleBarStyle` is set to `customButtonsOnHover`.
     state: string;
   }
 
+  // @ts-ignore
   class ClientRequest extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/client-request
@@ -3448,6 +3452,7 @@ This cannot be called when `titleBarStyle` is set to `customButtonsOnHover`.
     stopRecording(resultFilePath?: string): Promise<string>;
   }
 
+  // @ts-ignore
   interface ContextBridge extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/context-bridge
@@ -3501,6 +3506,7 @@ This cannot be called when `titleBarStyle` is set to `customButtonsOnHover`.
     value: string;
   }
 
+  // @ts-ignore
   class Cookies extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/cookies
@@ -3671,6 +3677,7 @@ Sets a cookie with `details`.
     scheme: string;
   }
 
+  // @ts-ignore
   class Debugger extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/debugger
@@ -4204,6 +4211,7 @@ Send given command to the debugging target.
     show(): Promise<void>;
   }
 
+  // @ts-ignore
   class DownloadItem extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/download-item
@@ -4551,6 +4559,7 @@ If the size is unknown, it returns 0.
     webgl2: string;
   }
 
+  // @ts-ignore
   interface InAppPurchase extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/in-app-purchase
@@ -4600,6 +4609,7 @@ Retrieves the product descriptions.
     restoreCompletedTransactions(): void;
   }
 
+  // @ts-ignore
   class IncomingMessage extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/incoming-message
@@ -4706,6 +4716,7 @@ Retrieves the product descriptions.
     writeTransferCount: number;
   }
 
+  // @ts-ignore
   interface IpcMain extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/ipc-main
@@ -4792,6 +4803,7 @@ Retrieves the product descriptions.
     sender: WebContents;
   }
 
+  // @ts-ignore
   interface IpcRenderer extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/ipc-renderer
@@ -5339,6 +5351,7 @@ where `SYSTEM_IMAGE_NAME` should be replaced with any value from this list.
     isMacTemplateImage: boolean;
   }
 
+  // @ts-ignore
   interface NativeTheme extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/native-theme
@@ -5464,6 +5477,7 @@ Starts recording network events to `path`.
     newGuest?: BrowserWindow;
   }
 
+  // @ts-ignore
   class Notification extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/notification
@@ -5597,6 +5611,7 @@ Starts recording network events to `path`.
     y: number;
   }
 
+  // @ts-ignore
   interface PowerMonitor extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/power-monitor
@@ -6204,6 +6219,7 @@ e.g.
     username?: string;
   }
 
+  // @ts-ignore
   interface Screen extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/screen
@@ -6351,6 +6367,7 @@ e.g.
     scriptUrl: string;
   }
 
+  // @ts-ignore
   class ServiceWorkers extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/service-workers
@@ -6392,6 +6409,7 @@ e.g.
     getFromVersionID(versionId: number): ServiceWorkerInfo;
   }
 
+  // @ts-ignore
   class Session extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/session
@@ -7007,6 +7025,7 @@ Creates or updates a shortcut link at `shortcutPath`.
     mimeType?: string;
   }
 
+  // @ts-ignore
   interface SystemPreferences extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/system-preferences
@@ -7519,6 +7538,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     label: string;
   }
 
+  // @ts-ignore
   class TouchBarColorPicker extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-color-picker
@@ -7531,6 +7551,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     selectedColor: string;
   }
 
+  // @ts-ignore
   class TouchBarGroup extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-group
@@ -7541,6 +7562,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     constructor(options: TouchBarGroupConstructorOptions);
   }
 
+  // @ts-ignore
   class TouchBarLabel extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-label
@@ -7554,6 +7576,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     textColor: string;
   }
 
+  // @ts-ignore
   class TouchBarPopover extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-popover
@@ -7566,6 +7589,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     label: string;
   }
 
+  // @ts-ignore
   class TouchBarScrubber extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-scrubber
@@ -7582,6 +7606,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     showArrowButtons: boolean;
   }
 
+  // @ts-ignore
   class TouchBarSegmentedControl extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-segmented-control
@@ -7595,6 +7620,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     selectedIndex: number;
   }
 
+  // @ts-ignore
   class TouchBarSlider extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-slider
@@ -7609,6 +7635,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     value: number;
   }
 
+  // @ts-ignore
   class TouchBarSpacer extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/touch-bar-spacer
@@ -7730,6 +7757,7 @@ This property is only available on macOS 10.14 Mojave or newer.
     transactionState: ('purchasing' | 'purchased' | 'failed' | 'restored' | 'deferred');
   }
 
+  // @ts-ignore
   class Tray extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/tray
@@ -8239,6 +8267,7 @@ This value is set to false by default.
     type: string;
   }
 
+  // @ts-ignore
   class WebContents extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/web-contents
@@ -9952,6 +9981,7 @@ Takes a V8 heap snapshot and saves it to `filePath`.
     zoomLevel: number;
   }
 
+  // @ts-ignore
   interface WebFrame extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/web-frame
@@ -13848,6 +13878,7 @@ interface Document {
 }
 
 declare namespace NodeJS {
+  // @ts-ignore
   interface Process extends NodeJS.EventEmitter {
 
     // Docs: http://electronjs.org/docs/api/process
